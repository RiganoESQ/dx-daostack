#################################
#  dxDAO Config
#################################
##
##  Run in rinkeby:
##    PK=<private_key> ENV_PATH=./env_vars/dao.conf yarn migrate --network rinkeby --reset | 2>&1 | tee deployment-rinkeby.txt
##
##  Run in mainnet:
##    PK=<private_key> ENV_PATH=./env_vars/dao.conf yarn migrate --network mainnet --reset | 2>&1 | tee deployment-mainnet.txt



# Time Zone (default 'Asia/Tel_Aviv')
#TIME_ZONE='Asia/Tel_Aviv'

# Basic DAO Data
##    For the actual values, see: 
##      src/config/dao.js
##    Values:
##      Token name:         dxDAO
##      Token Symbol:       DXD
##      Token CAP:          No CAP
##      Organizarion Name:  dxDAO

# Periods
##    For the actual values, see: 
##      src/config/timePeriods.js
##    Values:
##      Initial distribution:         2019-02-18 12:00
##      Initial distribution end:     2019-03-20 12:00
##      Claiming MGN Start:           2019-03-19 12:00
##      Claiming MGN End:             2019-03-20 12:00
##      Redeem Start:                 2019-03-20 12:00
##      Governance Start:             2019-04-04 12:00

# Locking contracts config
##    For the actual value, see: 
##      src/config/bootstrap.js
##    Values:
##      * Maximun locking period: 365 days
##      * Number of GEN auctions: 10
#MAX_LOCKING_PERIOD=31536000
#NUMBERS_OF_GEN_AUCTIONS=10

## Intial REP distribution
##    For the actual amounts, see: 
##      src/config/initalRepDistribution.js
##
##    TOTAL: 1M
##      30% Lock whitelisted tokens
##      8%  Lock Eth
##      10% GEN Auctions
##      50% Locked MGN holding
##      2%  Contributions


## Voting (Genesis Protocol)
##    For the actual value, see: 
##      src/config/voting.js
##    Note that there's different voting parameters:
##      - dutchX: Affects Generic Scheme, which modifies the DutchX
##      - contributionReward: Affects the Contribution Reward Scheme
##      - admin: Affects the Scheme Registrar

# Use Fixed price oracle
#   true: Uses the fixed price oracle
#   false (default): Uses the DutchX price oracle (DutchXPriceOracle)
#USE_FIXED_PRICE_ORACLE=false

# Use ExternalTokenLockerMock instead of MGN
#   true: Uses the mock ExternalTokenLockerMock
#   false (default): Uses the MGN contract from DutchX (TokenFRTProxy)
#USE_MOCK_MGN=false

# Use dx-contracts from networks-dev.json as opposed to networks.json
#   true: Uses the addresses from networks-dev.json in DutchX (instead of networks.json)
#   false (default): Uses the DutchX (the addresses defined in networks.json)
#USE_DEV_CONTRACTS=false

